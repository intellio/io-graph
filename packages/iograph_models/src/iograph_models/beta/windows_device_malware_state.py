from __future__ import annotations
from typing import Optional
from typing import Literal
from datetime import datetime
from pydantic import BaseModel, Field


class WindowsDeviceMalwareState(BaseModel):
	id: Optional[str] = Field(alias="id", default=None,)
	odata_type: Literal["#microsoft.graph.windowsDeviceMalwareState"] = Field(alias="@odata.type", default="#microsoft.graph.windowsDeviceMalwareState")
	additionalInformationUrl: Optional[str] = Field(alias="additionalInformationUrl", default=None,)
	category: Optional[WindowsMalwareCategory | str] = Field(alias="category", default=None,)
	detectionCount: Optional[int] = Field(alias="detectionCount", default=None,)
	displayName: Optional[str] = Field(alias="displayName", default=None,)
	executionState: Optional[WindowsMalwareExecutionState | str] = Field(alias="executionState", default=None,)
	initialDetectionDateTime: Optional[datetime] = Field(alias="initialDetectionDateTime", default=None,)
	lastStateChangeDateTime: Optional[datetime] = Field(alias="lastStateChangeDateTime", default=None,)
	severity: Optional[WindowsMalwareSeverity | str] = Field(alias="severity", default=None,)
	state: Optional[WindowsMalwareState | str] = Field(alias="state", default=None,)
	threatState: Optional[WindowsMalwareThreatState | str] = Field(alias="threatState", default=None,)

from .windows_malware_category import WindowsMalwareCategory
from .windows_malware_execution_state import WindowsMalwareExecutionState
from .windows_malware_severity import WindowsMalwareSeverity
from .windows_malware_state import WindowsMalwareState
from .windows_malware_threat_state import WindowsMalwareThreatState
