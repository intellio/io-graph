from __future__ import annotations
from typing import Optional
from pydantic import BaseModel, Field


class WindowsMalwareOverview(BaseModel):
	malwareCategorySummary: Optional[list[WindowsMalwareCategoryCount]] = Field(alias="malwareCategorySummary", default=None,)
	malwareDetectedDeviceCount: Optional[int] = Field(alias="malwareDetectedDeviceCount", default=None,)
	malwareExecutionStateSummary: Optional[list[WindowsMalwareExecutionStateCount]] = Field(alias="malwareExecutionStateSummary", default=None,)
	malwareNameSummary: Optional[list[WindowsMalwareNameCount]] = Field(alias="malwareNameSummary", default=None,)
	malwareSeveritySummary: Optional[list[WindowsMalwareSeverityCount]] = Field(alias="malwareSeveritySummary", default=None,)
	malwareStateSummary: Optional[list[WindowsMalwareStateCount]] = Field(alias="malwareStateSummary", default=None,)
	osVersionsSummary: Optional[list[OsVersionCount]] = Field(alias="osVersionsSummary", default=None,)
	totalDistinctMalwareCount: Optional[int] = Field(alias="totalDistinctMalwareCount", default=None,)
	totalMalwareCount: Optional[int] = Field(alias="totalMalwareCount", default=None,)
	odata_type: Optional[str] = Field(alias="@odata.type", default=None,)

from .windows_malware_category_count import WindowsMalwareCategoryCount
from .windows_malware_execution_state_count import WindowsMalwareExecutionStateCount
from .windows_malware_name_count import WindowsMalwareNameCount
from .windows_malware_severity_count import WindowsMalwareSeverityCount
from .windows_malware_state_count import WindowsMalwareStateCount
from .os_version_count import OsVersionCount
