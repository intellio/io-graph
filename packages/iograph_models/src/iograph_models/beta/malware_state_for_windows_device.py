from __future__ import annotations
from typing import Optional
from typing import Literal
from datetime import datetime
from pydantic import BaseModel, Field


class MalwareStateForWindowsDevice(BaseModel):
	id: Optional[str] = Field(alias="id", default=None,)
	odata_type: Literal["#microsoft.graph.malwareStateForWindowsDevice"] = Field(alias="@odata.type", default="#microsoft.graph.malwareStateForWindowsDevice")
	detectionCount: Optional[int] = Field(alias="detectionCount", default=None,)
	deviceName: Optional[str] = Field(alias="deviceName", default=None,)
	executionState: Optional[WindowsMalwareExecutionState | str] = Field(alias="executionState", default=None,)
	initialDetectionDateTime: Optional[datetime] = Field(alias="initialDetectionDateTime", default=None,)
	lastStateChangeDateTime: Optional[datetime] = Field(alias="lastStateChangeDateTime", default=None,)
	threatState: Optional[WindowsMalwareThreatState | str] = Field(alias="threatState", default=None,)

from .windows_malware_execution_state import WindowsMalwareExecutionState
from .windows_malware_threat_state import WindowsMalwareThreatState
