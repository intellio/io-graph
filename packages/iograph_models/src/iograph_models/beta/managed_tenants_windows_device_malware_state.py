from __future__ import annotations
from typing import Optional
from typing import Literal
from datetime import datetime
from pydantic import BaseModel, Field


class ManagedTenantsWindowsDeviceMalwareState(BaseModel):
	id: Optional[str] = Field(alias="id", default=None,)
	odata_type: Literal["#microsoft.graph.managedTenants.windowsDeviceMalwareState"] = Field(alias="@odata.type",)
	additionalInformationUrl: Optional[str] = Field(alias="additionalInformationUrl", default=None,)
	detectionCount: Optional[int] = Field(alias="detectionCount", default=None,)
	deviceDeleted: Optional[bool] = Field(alias="deviceDeleted", default=None,)
	initialDetectionDateTime: Optional[datetime] = Field(alias="initialDetectionDateTime", default=None,)
	lastRefreshedDateTime: Optional[datetime] = Field(alias="lastRefreshedDateTime", default=None,)
	lastStateChangeDateTime: Optional[datetime] = Field(alias="lastStateChangeDateTime", default=None,)
	malwareCategory: Optional[str] = Field(alias="malwareCategory", default=None,)
	malwareDisplayName: Optional[str] = Field(alias="malwareDisplayName", default=None,)
	malwareExecutionState: Optional[str] = Field(alias="malwareExecutionState", default=None,)
	malwareId: Optional[str] = Field(alias="malwareId", default=None,)
	malwareSeverity: Optional[str] = Field(alias="malwareSeverity", default=None,)
	malwareThreatState: Optional[str] = Field(alias="malwareThreatState", default=None,)
	managedDeviceId: Optional[str] = Field(alias="managedDeviceId", default=None,)
	managedDeviceName: Optional[str] = Field(alias="managedDeviceName", default=None,)
	tenantDisplayName: Optional[str] = Field(alias="tenantDisplayName", default=None,)
	tenantId: Optional[str] = Field(alias="tenantId", default=None,)

