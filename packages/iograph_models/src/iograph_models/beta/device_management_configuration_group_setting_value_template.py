from __future__ import annotations
from typing import Optional
from typing import Union
from typing import Annotated
from pydantic import BaseModel, Field, SerializeAsAny


class DeviceManagementConfigurationGroupSettingValueTemplate(BaseModel):
	children: Optional[list[Annotated[Union[DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate, DeviceManagementConfigurationChoiceSettingInstanceTemplate, DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate, DeviceManagementConfigurationGroupSettingInstanceTemplate, DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate, DeviceManagementConfigurationSimpleSettingInstanceTemplate],Field(discriminator="odata_type")]]] = Field(alias="children", default=None,)
	settingValueTemplateId: Optional[str] = Field(alias="settingValueTemplateId", default=None,)
	odata_type: Optional[str] = Field(alias="@odata.type", default=None,)

from .device_management_configuration_choice_setting_collection_instance_template import DeviceManagementConfigurationChoiceSettingCollectionInstanceTemplate
from .device_management_configuration_choice_setting_instance_template import DeviceManagementConfigurationChoiceSettingInstanceTemplate
from .device_management_configuration_group_setting_collection_instance_template import DeviceManagementConfigurationGroupSettingCollectionInstanceTemplate
from .device_management_configuration_group_setting_instance_template import DeviceManagementConfigurationGroupSettingInstanceTemplate
from .device_management_configuration_simple_setting_collection_instance_template import DeviceManagementConfigurationSimpleSettingCollectionInstanceTemplate
from .device_management_configuration_simple_setting_instance_template import DeviceManagementConfigurationSimpleSettingInstanceTemplate

