from __future__ import annotations
from typing import Optional
from typing import Literal
from datetime import datetime
from pydantic import BaseModel, Field


class WindowsMalwareInformation(BaseModel):
	id: Optional[str] = Field(alias="id", default=None,)
	odata_type: Literal["#microsoft.graph.windowsMalwareInformation"] = Field(alias="@odata.type", default="#microsoft.graph.windowsMalwareInformation")
	additionalInformationUrl: Optional[str] = Field(alias="additionalInformationUrl", default=None,)
	category: Optional[WindowsMalwareCategory | str] = Field(alias="category", default=None,)
	displayName: Optional[str] = Field(alias="displayName", default=None,)
	lastDetectionDateTime: Optional[datetime] = Field(alias="lastDetectionDateTime", default=None,)
	severity: Optional[WindowsMalwareSeverity | str] = Field(alias="severity", default=None,)
	deviceMalwareStates: Optional[list[MalwareStateForWindowsDevice]] = Field(alias="deviceMalwareStates", default=None,)

from .windows_malware_category import WindowsMalwareCategory
from .windows_malware_severity import WindowsMalwareSeverity
from .malware_state_for_windows_device import MalwareStateForWindowsDevice
