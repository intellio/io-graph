from __future__ import annotations
from typing import Optional
from datetime import datetime
from pydantic import BaseModel, Field, SerializeAsAny


class WindowsDeviceMalwareState(BaseModel):
	id: Optional[str] = Field(default=None,alias="id",)
	odata_type: Optional[str] = Field(default=None,alias="@odata.type",)
	additionalInformationUrl: Optional[str] = Field(default=None,alias="additionalInformationUrl",)
	category: Optional[WindowsMalwareCategory] = Field(default=None,alias="category",)
	detectionCount: Optional[int] = Field(default=None,alias="detectionCount",)
	displayName: Optional[str] = Field(default=None,alias="displayName",)
	executionState: Optional[WindowsMalwareExecutionState] = Field(default=None,alias="executionState",)
	initialDetectionDateTime: Optional[datetime] = Field(default=None,alias="initialDetectionDateTime",)
	lastStateChangeDateTime: Optional[datetime] = Field(default=None,alias="lastStateChangeDateTime",)
	severity: Optional[WindowsMalwareSeverity] = Field(default=None,alias="severity",)
	state: Optional[WindowsMalwareState] = Field(default=None,alias="state",)
	threatState: Optional[WindowsMalwareThreatState] = Field(default=None,alias="threatState",)

from .windows_malware_category import WindowsMalwareCategory
from .windows_malware_execution_state import WindowsMalwareExecutionState
from .windows_malware_severity import WindowsMalwareSeverity
from .windows_malware_state import WindowsMalwareState
from .windows_malware_threat_state import WindowsMalwareThreatState

