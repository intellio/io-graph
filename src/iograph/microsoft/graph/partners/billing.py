# generated by datamodel-codegen:
#   filename:  https://github.com/microsoftgraph/msgraph-metadata/raw/refs/heads/master/openapi/v1.0/openapi.yaml
#   timestamp: 2025-02-03T03:59:48+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field
from typing_extensions import Annotated

from .... import (
    BaseCollectionPaginationCountResponse,
)
from .. import LongRunningOperationStatus, PublicError
from .. import Entity


class BilledReconciliation(Entity):
    field_odata_type: str


class BilledUsage(Entity):
    field_odata_type: str


class BillingReconciliation(Entity):
    billed: Optional[BilledReconciliation] = None
    field_odata_type: str


class Operation(Entity):
    created_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The start time of the operation. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    last_action_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The time of the last action of the operation. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    status: Annotated[
        Optional[Union[LongRunningOperationStatus, Dict[str, Any]]],
        Field(
            description='The status of the operation. Possible values are: notStarted, running, completed, failed, unknownFutureValue.'
        ),
    ] = None
    field_odata_type: str


class RunningOperation(Operation):
    field_odata_type: str


class UnbilledUsage(Entity):
    field_odata_type: str


class Blob(BaseModel):
    name: Annotated[Optional[str], Field(description='The blob name.')] = None
    partition_value: Annotated[
        Optional[str],
        Field(
            description='The partition that contains the file. A large partition is split into multiple files, each with the same partitionValue.'
        ),
    ] = None
    field_odata_type: str


class AttributeSet(Enum):
    full = 'full'
    basic = 'basic'
    unknown_future_value = 'unknownFutureValue'


class BillingPeriod(Enum):
    current = 'current'
    last = 'last'
    unknown_future_value = 'unknownFutureValue'


class AzureUsage(Entity):
    billed: Optional[BilledUsage] = None
    unbilled: Optional[UnbilledUsage] = None
    field_odata_type: str


class FailedOperation(Operation):
    error: Optional[PublicError] = None
    field_odata_type: str


class Manifest(Entity):
    blob_count: Annotated[
        Optional[float],
        Field(
            description='The total file count for this partner tenant ID.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    blobs: Annotated[
        Optional[List[Blob]],
        Field(
            description='A collection of blob objects that contain details of all the files for the partner tenant ID.'
        ),
    ] = None
    created_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date and time when a manifest resource was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    data_format: Annotated[
        Optional[str],
        Field(
            description='The billing data file format. The possible value is: compressedJSONLines. Each blob is a compressed file and data in the file is in JSON lines format. Decompress the file to access the data.'
        ),
    ] = None
    e_tag: Annotated[
        Optional[str],
        Field(
            description='Version of data represented by the manifest. Any change in eTag indicates a new data version.'
        ),
    ] = None
    partition_type: Annotated[
        Optional[str],
        Field(
            description='Indicates the division of data. If a given partition has more than the supported number, the data is split into multiple files, each file representing a specific partitionValue. By default, the data in the file is partitioned by the number of line items.'
        ),
    ] = None
    partner_tenant_id: Annotated[
        Optional[str],
        Field(description='The Microsoft Entra tenant ID of the partner.'),
    ] = None
    root_directory: Annotated[
        Optional[str],
        Field(description='The root directory that contains all the files.'),
    ] = None
    sas_token: Annotated[
        Optional[str],
        Field(
            description='The SAS token for accessing the directory or an individual file in the directory.'
        ),
    ] = None
    schema_version: Annotated[
        Optional[str], Field(description='The version of the manifest schema.')
    ] = None
    field_odata_type: str


class ManifestCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Manifest]] = None


class OperationCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Operation]] = None


class FailedOperationCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[FailedOperation]] = None


class RunningOperationCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[RunningOperation]] = None


class BlobCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Blob]] = None


class Billing(Entity):
    manifests: Annotated[
        Optional[List[Manifest]],
        Field(description='Represents metadata for the exported data.'),
    ] = None
    operations: Annotated[
        Optional[List[Operation]],
        Field(
            description='Represents an operation to export the billing data of a partner.'
        ),
    ] = None
    reconciliation: Optional[BillingReconciliation] = None
    usage: Optional[AzureUsage] = None
    field_odata_type: str


class ExportSuccessOperation(Operation):
    resource_location: Optional[Manifest] = None
    field_odata_type: str


class ExportSuccessOperationCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[ExportSuccessOperation]] = None
