# generated by datamodel-codegen:
#   filename:  https://github.com/microsoftgraph/msgraph-metadata/raw/refs/heads/master/openapi/v1.0/openapi.yaml
#   timestamp: 2025-02-03T03:59:48+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field
from typing_extensions import Annotated


class ErrorDetails(BaseModel):
    code: str
    message: str
    target: Optional[str] = None


class InnerError(BaseModel):
    request_id: Annotated[
        Optional[str],
        Field(description='Request Id as tracked internally by the service'),
    ] = None
    client_request_id: Annotated[
        Optional[str],
        Field(description='Client request Id as sent by the client application.'),
    ] = None
    date: Annotated[
        Optional[datetime],
        Field(
            description='Date when the error occured.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    field_odata_type: str


class MainError(BaseModel):
    code: str
    message: str
    target: Optional[str] = None
    details: Optional[List[ErrorDetails]] = None
    inner_error: Optional[InnerError] = None


class ODataError(BaseModel):
    error: MainError
