# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-02-03T21:55:16+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List

from pydantic import BaseModel, Field
from typing_extensions import Annotated

from . import KeyValue
from . import Entity


class LocalizedDescription(BaseModel):
    field_odata_type: str
    description: Annotated[
        str | None, Field(description='The description in the localized language.')
    ] = None
    language_tag: Annotated[
        str | None, Field(description='The language tag for the label.')
    ] = None


class LocalizedLabel(BaseModel):
    field_odata_type: str
    is_default: Annotated[
        bool | None,
        Field(description='Indicates whether the label is the default label.'),
    ] = None
    language_tag: Annotated[
        str | None, Field(description='The language tag for the label.')
    ] = None
    name: Annotated[str | None, Field(description='The name of the label.')] = None


class LocalizedName(BaseModel):
    field_odata_type: str
    language_tag: Annotated[
        str | None, Field(description='The language tag for the label.')
    ] = None
    name: Annotated[
        str | None, Field(description='The name in the localized language.')
    ] = None


class RelationType(Enum):
    pin = 'pin'
    reuse = 'reuse'
    unknown_future_value = 'unknownFutureValue'


class TermGroupScope(Enum):
    global_ = 'global'
    system = 'system'
    site_collection = 'siteCollection'
    unknown_future_value = 'unknownFutureValue'


class Group(Entity):
    field_odata_type: str
    created_date_time: Annotated[
        datetime | None,
        Field(
            description='Date and time of the group creation. Read-only.',
        ),
    ] = None
    description: Annotated[
        str | None,
        Field(description='Description that gives details on the term usage.'),
    ] = None
    display_name: Annotated[str | None, Field(description='Name of the group.')] = None
    parent_site_id: Annotated[
        str | None, Field(description='ID of the parent site of this group.')
    ] = None
    scope: Annotated[
        TermGroupScope | Dict[str, Any] | None,
        Field(
            description='Returns the type of the group. Possible values are: global, system, and siteCollection.'
        ),
    ] = None
    sets: Annotated[
        List[Set] | None,
        Field(description='All sets under the group in a term [store].'),
    ] = None


class Relation(Entity):
    field_odata_type: str
    from_term: Annotated[
        Term | Dict[str, Any] | None,
        Field(
            description='The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].'
        ),
    ] = None
    relationship: Annotated[
        RelationType | Dict[str, Any] | None,
        Field(description='The type of relation. Possible values are: pin, reuse.'),
    ] = None
    set: Annotated[
        Set | Dict[str, Any] | None,
        Field(description='The [set] in which the relation is relevant.'),
    ] = None
    to_term: Annotated[
        Term | Dict[str, Any] | None,
        Field(
            description='The to [term] of the relation. The term to which the relationship is defined.'
        ),
    ] = None


class Set(Entity):
    field_odata_type: str
    children: Annotated[
        List[Term] | None, Field(description='Children terms of set in term [store].')
    ] = None
    created_date_time: Annotated[
        datetime | None,
        Field(
            description='Date and time of set creation. Read-only.',
        ),
    ] = None
    description: Annotated[
        str | None,
        Field(description='Description that gives details on the term usage.'),
    ] = None
    localized_names: Annotated[
        List[LocalizedName] | None,
        Field(description='Name of the set for each languageTag.'),
    ] = None
    parent_group: Group | None = None
    properties: Annotated[
        List[KeyValue] | None, Field(description='Custom properties for the set.')
    ] = None
    relations: Annotated[
        List[Relation] | None,
        Field(
            description='Indicates which terms have been pinned or reused directly under the set.'
        ),
    ] = None
    terms: Annotated[
        List[Term] | None, Field(description='All the terms under the set.')
    ] = None


class Store(Entity):
    field_odata_type: str
    default_language_tag: Annotated[
        str | None, Field(description='Default language of the term store.')
    ] = None
    groups: Annotated[
        List[Group] | None,
        Field(description='Collection of all groups available in the term store.'),
    ] = None
    language_tags: Annotated[
        List[str] | None, Field(description='List of languages for the term store.')
    ] = None
    sets: Annotated[
        List[Set] | None,
        Field(
            description='Collection of all sets available in the term store. This relationship can only be used to load a specific term set.'
        ),
    ] = None


class Term(Entity):
    field_odata_type: str
    children: Annotated[
        List[Term] | None, Field(description='Children of current term.')
    ] = None
    created_date_time: Annotated[
        datetime | None,
        Field(
            description='Date and time of term creation. Read-only.',
        ),
    ] = None
    descriptions: Annotated[
        List[LocalizedDescription] | None,
        Field(
            description='Description about term that is dependent on the languageTag.'
        ),
    ] = None
    labels: Annotated[
        List[LocalizedLabel] | None, Field(description='Label metadata for a term.')
    ] = None
    last_modified_date_time: Annotated[
        datetime | None,
        Field(
            description='Last date and time of term modification. Read-only.',
        ),
    ] = None
    properties: Annotated[
        List[KeyValue] | None,
        Field(description='Collection of properties on the term.'),
    ] = None
    relations: Annotated[
        List[Relation] | None,
        Field(
            description='To indicate which terms are related to the current term as either pinned or reused.'
        ),
    ] = None
    set: Annotated[
        Set | Dict[str, Any] | None,
        Field(description='The [set] in which the term is created.'),
    ] = None



