# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-02-03T05:27:31+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field
from typing_extensions import Annotated

from . import (
    Application,
    CustomExtensionCallbackConfiguration,
    DeletedItemContainer,
    EmailSettings,
    Group,
    KeyValuePair,
)
from . import SubjectSet as SubjectSet_1
from . import User
from .BaseCollectionPaginationCountResponse import BaseCollectionPaginationCountResponse
from .CustomCalloutExtension import CustomCalloutExtension
from .CustomExtensionCallbackConfiguration import (
    CustomExtensionCallbackConfiguration as CustomExtensionCallbackConfiguration_1,
)
from .CustomExtensionData import CustomExtensionData
from .Entity import Entity
from .SubjectSet import SubjectSet


class Insights(Entity):
    field_odata_type: str


class LifecycleManagementSettings(Entity):
    email_settings: Optional[EmailSettings] = None
    workflow_schedule_interval_in_hours: Annotated[
        Optional[float],
        Field(
            description='The interval in hours at which all workflows running in the tenant should be scheduled for execution. This interval has a minimum value of 1 and a maximum value of 24. The default value is 3 hours.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class RuleBasedSubjectSet(SubjectSet):
    rule: Annotated[
        Optional[str],
        Field(
            description='The rule for the subject set. Lifecycle Workflows supports a rich set of user properties for configuring the rules using $filter query expressions. For more information, see supported user and query parameters.'
        ),
    ] = None
    field_odata_type: str


class RunSummary(BaseModel):
    failed_runs: Annotated[
        Optional[float],
        Field(
            description='The number of failed workflow runs.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_tasks: Annotated[
        Optional[float],
        Field(
            description='The number of failed tasks of a workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_runs: Annotated[
        Optional[float],
        Field(
            description='The number of successful workflow runs.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_runs: Annotated[
        Optional[float],
        Field(
            description='The total number of runs for a workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_tasks: Annotated[
        Optional[float],
        Field(
            description='The total number of tasks processed by a workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users: Annotated[
        Optional[float],
        Field(
            description='The total number of users processed by a workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class TaskReportSummary(BaseModel):
    failed_tasks: Annotated[
        Optional[float],
        Field(
            description='The number of failed tasks in a report.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_tasks: Annotated[
        Optional[float],
        Field(
            description='The total number of successful tasks in a report.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_tasks: Annotated[
        Optional[float],
        Field(
            description='The total number of tasks in a report.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    unprocessed_tasks: Annotated[
        Optional[float],
        Field(
            description='The number of unprocessed tasks in a report.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class TopTasksInsightsSummary(BaseModel):
    failed_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of failed runs of the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_users: Annotated[
        Optional[float],
        Field(
            description='Count of failed users who were processed by the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of successful runs of the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_users: Annotated[
        Optional[float],
        Field(
            description='Count of successful users processed by the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    task_definition_display_name: Annotated[
        Optional[str], Field(description='The name of the task.')
    ] = None
    task_definition_id: Annotated[Optional[str], Field(description='The task ID.')] = (
        None
    )
    total_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of total runs of the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users: Annotated[
        Optional[float],
        Field(
            description='Count of total users processed by the task.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class TriggerAttribute(BaseModel):
    name: Annotated[
        Optional[str],
        Field(
            description='The name of the trigger attribute that is changed to trigger an attributeChangeTrigger workflow.'
        ),
    ] = None
    field_odata_type: str


class UsersProcessingSummary(BaseModel):
    failed_tasks: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    failed_users: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    successful_users: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    total_tasks: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    total_users: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    field_odata_type: str


class UserSummary(BaseModel):
    failed_tasks: Annotated[
        Optional[float],
        Field(
            description='The number of failed tasks for users in a user summary.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_users: Annotated[
        Optional[float],
        Field(
            description='The number of failed users in a user summary.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_users: Annotated[
        Optional[float],
        Field(
            description='The number of successful users in a user summary.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_tasks: Annotated[
        Optional[float],
        Field(
            description='The total tasks of users in a user summary.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users: Annotated[
        Optional[float],
        Field(
            description='The total number of users in a user summary',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class WorkflowExecutionConditions(BaseModel):
    field_odata_type: str


class WorkflowExecutionTrigger(BaseModel):
    field_odata_type: str


class WorkflowsInsightsByCategory(BaseModel):
    failed_joiner_runs: Annotated[
        Optional[float],
        Field(
            description="Failed 'Joiner' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_leaver_runs: Annotated[
        Optional[float],
        Field(
            description="Failed 'Leaver' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_mover_runs: Annotated[
        Optional[float],
        Field(
            description="Failed 'Mover' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_joiner_runs: Annotated[
        Optional[float],
        Field(
            description="Successful 'Joiner' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_leaver_runs: Annotated[
        Optional[float],
        Field(
            description="Successful 'Leaver' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_mover_runs: Annotated[
        Optional[float],
        Field(
            description="Successful 'Mover' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_joiner_runs: Annotated[
        Optional[float],
        Field(
            description="Total 'Joiner' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_leaver_runs: Annotated[
        Optional[float],
        Field(
            description="Total 'Leaver' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_mover_runs: Annotated[
        Optional[float],
        Field(
            description="Total 'Mover' workflows processed in a tenant.",
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class WorkflowsInsightsSummary(BaseModel):
    failed_runs: Annotated[
        Optional[float],
        Field(
            description='Count of failed workflow runs processed in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of failed tasks processed in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_users: Annotated[
        Optional[float],
        Field(
            description='Count of failed users processed by workflows in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_runs: Annotated[
        Optional[float],
        Field(
            description='Count of successful workflow runs processed in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of successful tasks processed in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_users: Annotated[
        Optional[float],
        Field(
            description='Count of successful users processed by workflows in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_runs: Annotated[
        Optional[float],
        Field(
            description='Count of total workflows processed in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_tasks: Annotated[
        Optional[float],
        Field(
            description='Count of total tasks processed by workflows in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users: Annotated[
        Optional[float],
        Field(
            description='Count of total users processed by workflows in the tenant.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class CustomTaskExtensionOperationStatus(Enum):
    completed = 'completed'
    failed = 'failed'
    unknown_future_value = 'unknownFutureValue'


class LifecycleTaskCategory(Enum):
    joiner = 'joiner'
    leaver = 'leaver'
    unknown_future_value = 'unknownFutureValue'
    mover = 'mover'


class LifecycleWorkflowCategory(Enum):
    joiner = 'joiner'
    leaver = 'leaver'
    unknown_future_value = 'unknownFutureValue'
    mover = 'mover'


class LifecycleWorkflowProcessingStatus(Enum):
    queued = 'queued'
    in_progress = 'inProgress'
    completed = 'completed'
    completed_with_errors = 'completedWithErrors'
    canceled = 'canceled'
    failed = 'failed'
    unknown_future_value = 'unknownFutureValue'


class MembershipChangeType(Enum):
    add = 'add'
    remove = 'remove'
    unknown_future_value = 'unknownFutureValue'


class ValueType(Enum):
    enum = 'enum'
    string = 'string'
    int = 'int'
    bool = 'bool'
    unknown_future_value = 'unknownFutureValue'


class WorkflowExecutionType(Enum):
    scheduled = 'scheduled'
    on_demand = 'onDemand'
    unknown_future_value = 'unknownFutureValue'


class WorkflowTriggerTimeBasedAttribute(Enum):
    employee_hire_date = 'employeeHireDate'
    employee_leave_date_time = 'employeeLeaveDateTime'
    unknown_future_value = 'unknownFutureValue'
    created_date_time = 'createdDateTime'


class AttributeChangeTrigger(WorkflowExecutionTrigger):
    trigger_attributes: Annotated[
        Optional[List[TriggerAttribute]],
        Field(
            description='The trigger attribute being changed that triggers the workflowexecutiontrigger of a workflow.)'
        ),
    ] = None
    field_odata_type: str


class CustomTaskExtensionCallbackData(CustomExtensionData):
    operation_status: Annotated[
        Optional[Union[CustomTaskExtensionOperationStatus, Dict[str, Any]]],
        Field(
            description="Operation status that's provided by the Azure Logic App indicating whenever the Azure Logic App has run successfully or not. Supported values: completed, failed, unknownFutureValue."
        ),
    ] = None
    field_odata_type: str


class MembershipChangeTrigger(WorkflowExecutionTrigger):
    change_type: Optional[MembershipChangeType] = None
    field_odata_type: str


class OnDemandExecutionOnly(WorkflowExecutionConditions):
    field_odata_type: str


class Parameter(BaseModel):
    name: Annotated[Optional[str], Field(description='The name of the parameter.')] = (
        None
    )
    values: Annotated[
        Optional[List[str]], Field(description='The values of the parameter.')
    ] = None
    value_type: Optional[ValueType] = None
    field_odata_type: str


class TimeBasedAttributeTrigger(WorkflowExecutionTrigger):
    offset_in_days: Annotated[
        Optional[float],
        Field(
            description='How many days before or after the time-based attribute specified the workflow should trigger. For example, if the attribute is employeeHireDate and offsetInDays is -1, then the workflow should trigger one day before the employee hire date. The value can range between -180 and 180 days.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    time_based_attribute: Optional[WorkflowTriggerTimeBasedAttribute] = None
    field_odata_type: str


class TopWorkflowsInsightsSummary(BaseModel):
    failed_runs: Annotated[
        Optional[float],
        Field(
            description='Count of failed runs for workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_users: Annotated[
        Optional[float],
        Field(
            description='Count of failed users who were processed.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_runs: Annotated[
        Optional[float],
        Field(
            description='Count of successful runs of the workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    successful_users: Annotated[
        Optional[float],
        Field(
            description='Count of successful users processed by the workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_runs: Annotated[
        Optional[float],
        Field(
            description='Count of total runs of workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users: Annotated[
        Optional[float],
        Field(
            description='Total number of users processed by the workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    workflow_category: Optional[LifecycleWorkflowCategory] = None
    workflow_display_name: Annotated[
        Optional[str], Field(description='The name of the workflow.')
    ] = None
    workflow_id: Annotated[Optional[str], Field(description='The workflow ID.')] = None
    workflow_version: Annotated[
        Optional[float],
        Field(
            description='The version of the workflow that was a top workflow ran.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class TriggerAndScopeBasedConditions(WorkflowExecutionConditions):
    scope: Annotated[
        Optional[Union[SubjectSet_1, Dict[str, Any]]],
        Field(description='Defines who the workflow runs for.'),
    ] = None
    trigger: Annotated[
        Optional[Union[WorkflowExecutionTrigger, Dict[str, Any]]],
        Field(description='What triggers a workflow to run.'),
    ] = None
    field_odata_type: str


class ParameterCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Parameter]] = None


class TriggerAttributeCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[TriggerAttribute]] = None


class TaskDefinition(Entity):
    category: Optional[LifecycleTaskCategory] = None
    continue_on_error: Annotated[
        Optional[bool],
        Field(
            description='Defines if the workflow will continue if the task has an error.'
        ),
    ] = None
    description: Annotated[
        Optional[str], Field(description='The description of the taskDefinition.')
    ] = None
    display_name: Annotated[
        Optional[str],
        Field(
            description='The display name of the taskDefinition.Supports $filter(eq, ne) and $orderby.'
        ),
    ] = None
    parameters: Annotated[
        Optional[List[Parameter]],
        Field(
            description='The parameters that must be supplied when creating a workflow task object.Supports $filter(any).'
        ),
    ] = None
    version: Annotated[
        Optional[float],
        Field(
            description='The version number of the taskDefinition. New records are pushed when we add support for new parameters.Supports $filter(ge, gt, le, lt, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


class TaskDefinitionCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[TaskDefinition]] = None


class CustomTaskExtension(CustomCalloutExtension):
    callback_configuration: Annotated[
        Optional[Union[CustomExtensionCallbackConfiguration, Dict[str, Any]]],
        Field(description='The callback configuration for a custom task extension.'),
    ] = None
    created_date_time: Annotated[
        Optional[datetime],
        Field(
            description='When the custom task extension was created.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    last_modified_date_time: Annotated[
        Optional[datetime],
        Field(
            description='When the custom extension was last modified.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    created_by: Annotated[
        Optional[Union[User, Dict[str, Any]]],
        Field(
            description='The unique identifier of the Microsoft Entra user that created the custom task extension.Supports $filter(eq, ne) and $expand.'
        ),
    ] = None
    last_modified_by: Annotated[
        Optional[Union[User, Dict[str, Any]]],
        Field(
            description='The unique identifier of the Microsoft Entra user that modified the custom task extension last.Supports $filter(eq, ne) and $expand.'
        ),
    ] = None
    field_odata_type: str


class LifecycleWorkflowsContainer(Entity):
    custom_task_extensions: Annotated[
        Optional[List[CustomTaskExtension]],
        Field(description='The customTaskExtension instance.'),
    ] = None
    deleted_items: Annotated[
        Optional[Union[DeletedItemContainer, Dict[str, Any]]],
        Field(description='Deleted workflows in your lifecycle workflows instance.'),
    ] = None
    insights: Annotated[
        Optional[Union[Insights, Dict[str, Any]]],
        Field(
            description='The insight container holding workflow insight summaries for a tenant.'
        ),
    ] = None
    settings: Optional[LifecycleManagementSettings] = None
    task_definitions: Annotated[
        Optional[List[TaskDefinition]],
        Field(
            description='The definition of tasks within the lifecycle workflows instance.'
        ),
    ] = None
    workflows: Annotated[
        Optional[List[Workflow]],
        Field(description='The workflows in the lifecycle workflows instance.'),
    ] = None
    workflow_templates: Annotated[
        Optional[List[WorkflowTemplate]],
        Field(description='The workflow templates in the lifecycle workflow instance.'),
    ] = None
    field_odata_type: str


class Run(Entity):
    completed_date_time: Annotated[
        Optional[datetime],
        Field(
            description="The date time that the run completed. Value is null if the workflow hasn't completed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    failed_tasks_count: Annotated[
        Optional[float],
        Field(
            description='The number of tasks that failed in the run execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    failed_users_count: Annotated[
        Optional[float],
        Field(
            description='The number of users that failed in the run execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    last_updated_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The datetime that the run was last updated.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    processing_status: Optional[LifecycleWorkflowProcessingStatus] = None
    scheduled_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the run is scheduled to be executed for a workflow.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    started_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the run execution started.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    successful_users_count: Annotated[
        Optional[float],
        Field(
            description='The number of successfully completed users in the run.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_tasks_count: Annotated[
        Optional[float], Field(ge=-2147483648.0, le=2147483647.0)
    ] = None
    total_unprocessed_tasks_count: Annotated[
        Optional[float],
        Field(
            description='The total number of unprocessed tasks in the run execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users_count: Annotated[
        Optional[float],
        Field(
            description='The total number of users in the workflow execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    workflow_execution_type: Optional[WorkflowExecutionType] = None
    task_processing_results: Annotated[
        Optional[List[TaskProcessingResult]],
        Field(description='The related taskProcessingResults.'),
    ] = None
    user_processing_results: Annotated[
        Optional[List[UserProcessingResult]],
        Field(description='The associated individual user execution.'),
    ] = None
    field_odata_type: str


class Task(Entity):
    arguments: Annotated[
        Optional[List[KeyValuePair]],
        Field(
            description='Arguments included within the task.  For guidance to configure this property, see Configure the arguments for built-in Lifecycle Workflow tasks. Required.'
        ),
    ] = None
    category: Optional[LifecycleTaskCategory] = None
    continue_on_error: Annotated[
        Optional[bool],
        Field(
            description="A Boolean value that specifies whether, if this task fails, the workflow stops, and subsequent tasks aren't run. Optional."
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(
            description='A string that describes the purpose of the task for administrative use. Optional.'
        ),
    ] = None
    display_name: Annotated[
        Optional[str],
        Field(
            description='A unique string that identifies the task. Required.Supports $filter(eq, ne) and orderBy.'
        ),
    ] = None
    execution_sequence: Annotated[
        Optional[float],
        Field(
            description='An integer that states in what order the task runs in a workflow.Supports $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    is_enabled: Annotated[
        Optional[bool],
        Field(
            description='A Boolean value that denotes whether the task is set to run or not. Optional.Supports $filter(eq, ne) and orderBy.'
        ),
    ] = None
    task_definition_id: Annotated[
        Optional[str],
        Field(
            description='A unique template identifier for the task. For more information about the tasks that Lifecycle Workflows currently supports and their unique identifiers, see Configure the arguments for built-in Lifecycle Workflow tasks. Required.Supports $filter(eq, ne).'
        ),
    ] = None
    task_processing_results: Annotated[
        Optional[List[TaskProcessingResult]],
        Field(description='The result of processing the task.'),
    ] = None
    field_odata_type: str


class TaskProcessingResult(Entity):
    completed_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time when taskProcessingResult execution ended. Value is null if task execution is still in progress.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    created_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time when the taskProcessingResult was created.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    failure_reason: Annotated[
        Optional[str],
        Field(description='Describes why the taskProcessingResult has failed.'),
    ] = None
    processing_status: Optional[LifecycleWorkflowProcessingStatus] = None
    started_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time when taskProcessingResult execution started. Value is null if task execution has not yet started.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    subject: Optional[User] = None
    task: Optional[Task] = None
    field_odata_type: str


class TaskReport(Entity):
    completed_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the associated run completed. Value is null if the run has not completed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    failed_users_count: Annotated[
        Optional[float],
        Field(
            description='The number of users in the run execution for which the associated task failed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    last_updated_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date and time that the task report was last updated.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    processing_status: Optional[LifecycleWorkflowProcessingStatus] = None
    run_id: Annotated[
        Optional[str], Field(description='The unique identifier of the associated run.')
    ] = None
    started_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the associated run started. Value is null if the run has not started.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    successful_users_count: Annotated[
        Optional[float],
        Field(
            description='The number of users in the run execution for which the associated task succeeded.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_users_count: Annotated[
        Optional[float],
        Field(
            description='The total number of users in the run execution for which the associated task was scheduled to execute.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    unprocessed_users_count: Annotated[
        Optional[float],
        Field(
            description='The number of users in the run execution for which the associated task is queued, in progress, or canceled.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    task: Optional[Task] = None
    task_definition: Optional[TaskDefinition] = None
    task_processing_results: Annotated[
        Optional[List[TaskProcessingResult]],
        Field(description='The related lifecycle workflow taskProcessingResults.'),
    ] = None
    field_odata_type: str


class UserProcessingResult(Entity):
    completed_date_time: Annotated[
        Optional[datetime],
        Field(
            description="The date time that the workflow execution for a user completed. Value is null if the workflow hasn't completed.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.",
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    failed_tasks_count: Annotated[
        Optional[float],
        Field(
            description='The number of tasks that failed in the workflow execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    processing_status: Optional[LifecycleWorkflowProcessingStatus] = None
    scheduled_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the workflow is scheduled to be executed for a user.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    started_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time that the workflow execution started. Value is null if the workflow execution has not started.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    total_tasks_count: Annotated[
        Optional[float],
        Field(
            description='The total number of tasks that in the workflow execution.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    total_unprocessed_tasks_count: Annotated[
        Optional[float],
        Field(
            description='The total number of unprocessed tasks for the workflow.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    workflow_execution_type: Optional[WorkflowExecutionType] = None
    workflow_version: Annotated[
        Optional[float],
        Field(
            description='The version of the workflow that was executed.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    subject: Optional[User] = None
    task_processing_results: Annotated[
        Optional[List[TaskProcessingResult]],
        Field(description='The associated individual task execution.'),
    ] = None
    field_odata_type: str


class WorkflowBase(BaseModel):
    category: Optional[LifecycleWorkflowCategory] = None
    created_date_time: Annotated[
        Optional[datetime],
        Field(
            description='When a workflow was created.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    description: Annotated[
        Optional[str],
        Field(description='A string that describes the purpose of the workflow.'),
    ] = None
    display_name: Annotated[
        Optional[str], Field(description='A string to identify the workflow.')
    ] = None
    execution_conditions: Annotated[
        Optional[Union[WorkflowExecutionConditions, Dict[str, Any]]],
        Field(description='Defines when and for who the workflow will run.'),
    ] = None
    is_enabled: Annotated[
        Optional[bool],
        Field(
            description='Whether the workflow is enabled or disabled. If this setting is true, the workflow can be run on demand or on schedule when isSchedulingEnabled is true.'
        ),
    ] = None
    is_scheduling_enabled: Annotated[
        Optional[bool],
        Field(
            description="If true, the Lifecycle Workflow engine executes the workflow based on the schedule defined by tenant settings. Can't be true for a disabled workflow (where isEnabled is false)."
        ),
    ] = None
    last_modified_date_time: Annotated[
        Optional[datetime],
        Field(
            description='When the workflow was last modified.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    created_by: Annotated[
        Optional[Union[User, Dict[str, Any]]],
        Field(description='The user who created the workflow.'),
    ] = None
    last_modified_by: Annotated[
        Optional[Union[User, Dict[str, Any]]],
        Field(
            description='The unique identifier of the Microsoft Entra identity that last modified the workflow.'
        ),
    ] = None
    tasks: Annotated[
        Optional[List[Task]], Field(description='The tasks in the workflow.')
    ] = None
    field_odata_type: str


class WorkflowTemplate(Entity):
    category: Optional[LifecycleWorkflowCategory] = None
    description: Annotated[
        Optional[str], Field(description='The description of the workflowTemplate.')
    ] = None
    display_name: Annotated[
        Optional[str],
        Field(
            description='The display name of the workflowTemplate.Supports $filter(eq, ne) and $orderby.'
        ),
    ] = None
    execution_conditions: Annotated[
        Optional[Union[WorkflowExecutionConditions, Dict[str, Any]]],
        Field(
            description='Conditions describing when to execute the workflow and the criteria to identify in-scope subject set.'
        ),
    ] = None
    tasks: Annotated[
        Optional[List[Task]],
        Field(
            description='Represents the configured tasks to execute and their execution sequence within a workflow. This relationship is expanded by default.'
        ),
    ] = None
    field_odata_type: str


class CustomTaskExtensionCallbackConfiguration(CustomExtensionCallbackConfiguration_1):
    authorized_apps: Optional[List[Application]] = None
    field_odata_type: str


class CustomTaskExtensionCalloutData(CustomExtensionData):
    subject: Optional[Union[User, Dict[str, Any]]] = None
    task: Optional[Union[Task, Dict[str, Any]]] = None
    task_processingresult: Optional[Union[TaskProcessingResult, Dict[str, Any]]] = None
    workflow: Optional[Union[Workflow, Dict[str, Any]]] = None
    field_odata_type: str


class GroupBasedSubjectSet(SubjectSet):
    groups: Optional[List[Group]] = None
    field_odata_type: str


class WorkflowCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Workflow]] = None


class CustomTaskExtensionCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[CustomTaskExtension]] = None


class WorkflowTemplateCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[WorkflowTemplate]] = None


class TaskProcessingResultCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[TaskProcessingResult]] = None


class UserProcessingResultCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[UserProcessingResult]] = None


class TaskCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Task]] = None


class RunCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Run]] = None


class TaskReportCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[TaskReport]] = None


class WorkflowVersionCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[WorkflowVersion]] = None


class Workflow(WorkflowBase):
    deleted_date_time: Annotated[
        Optional[datetime],
        Field(
            description='When the workflow was deleted.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    id: Annotated[
        Optional[str],
        Field(
            description='Identifier used for individually addressing a specific workflow.Supports $filter(eq, ne) and $orderby.'
        ),
    ] = None
    next_schedule_run_date_time: Annotated[
        Optional[datetime],
        Field(
            description='The date time when the workflow is expected to run next based on the schedule interval, if there are any users matching the execution conditions. Supports $filter(lt,gt) and $orderby.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    version: Annotated[
        Optional[float],
        Field(
            description='The current version number of the workflow. Value is 1 when the workflow is first created.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    execution_scope: Annotated[
        Optional[List[UserProcessingResult]],
        Field(
            description='The unique identifier of the Microsoft Entra identity that last modified the workflow object.'
        ),
    ] = None
    runs: Annotated[Optional[List[Run]], Field(description='Workflow runs.')] = None
    task_reports: Annotated[
        Optional[List[TaskReport]],
        Field(
            description='Represents the aggregation of task execution data for tasks within a workflow object.'
        ),
    ] = None
    user_processing_results: Annotated[
        Optional[List[UserProcessingResult]],
        Field(description='Per-user workflow execution results.'),
    ] = None
    versions: Annotated[
        Optional[List[WorkflowVersion]],
        Field(description='The workflow versions that are available.'),
    ] = None
    field_odata_type: str


class WorkflowVersion(WorkflowBase):
    version_number: Annotated[
        Optional[float],
        Field(
            description='The version of the workflow.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.',
            ge=-2147483648.0,
            le=2147483647.0,
        ),
    ] = None
    field_odata_type: str


LifecycleWorkflowsContainer.model_rebuild()
Run.model_rebuild()
Task.model_rebuild()
CustomTaskExtensionCalloutData.model_rebuild()
WorkflowCollectionResponse.model_rebuild()
WorkflowVersionCollectionResponse.model_rebuild()
Workflow.model_rebuild()
