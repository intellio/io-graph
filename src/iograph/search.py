# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-02-03T05:27:31+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field
from typing_extensions import Annotated

from . import DevicePlatformType
from .BaseCollectionPaginationCountResponse import BaseCollectionPaginationCountResponse
from .Entity import Entity


class AnswerKeyword(BaseModel):
    keywords: Annotated[
        Optional[List[str]],
        Field(
            description='A collection of keywords used to trigger the search answer.'
        ),
    ] = None
    match_similar_keywords: Annotated[
        Optional[bool],
        Field(
            description='If true, indicates that the search term contains similar words to the keywords that should trigger the search answer.'
        ),
    ] = None
    reserved_keywords: Annotated[
        Optional[List[str]],
        Field(
            description='Unique keywords that guarantee the search answer is triggered.'
        ),
    ] = None
    field_odata_type: str


class AnswerVariant(BaseModel):
    description: Annotated[
        Optional[str],
        Field(
            description='The answer variation description that is shown on the search results page.'
        ),
    ] = None
    display_name: Annotated[
        Optional[str],
        Field(
            description='The answer variation name that is displayed in search results.'
        ),
    ] = None
    language_tag: Annotated[
        Optional[str],
        Field(description='The country or region that can view this answer variation.'),
    ] = None
    platform: Annotated[
        Optional[Union[DevicePlatformType, Dict[str, Any]]],
        Field(
            description='The device or operating system that can view this answer variation. Possible values are: android, androidForWork, ios, macOS, windowsPhone81, windowsPhone81AndLater, windows10AndLater, androidWorkProfile, unknown, androidASOP, androidMobileApplicationManagement, iOSMobileApplicationManagement, unknownFutureValue.'
        ),
    ] = None
    web_url: Annotated[
        Optional[str],
        Field(
            description="The URL link for the answer variation. When users select this answer variation from the search results, they're directed to the specified URL."
        ),
    ] = None
    field_odata_type: str


class Identity(BaseModel):
    display_name: Optional[str] = None
    id: Optional[str] = None
    field_odata_type: str


class IdentitySet(BaseModel):
    application: Optional[Union[Identity, Dict[str, Any]]] = None
    device: Optional[Union[Identity, Dict[str, Any]]] = None
    user: Optional[Union[Identity, Dict[str, Any]]] = None
    field_odata_type: str


class AnswerState(Enum):
    published = 'published'
    draft = 'draft'
    excluded = 'excluded'
    unknown_future_value = 'unknownFutureValue'


class SearchAnswer(Entity):
    description: Annotated[
        Optional[str],
        Field(
            description='The search answer description that is shown on the search results page.'
        ),
    ] = None
    display_name: Annotated[
        Optional[str],
        Field(
            description='The search answer name that is displayed in search results.'
        ),
    ] = None
    last_modified_by: Annotated[
        Optional[Union[IdentitySet, Dict[str, Any]]],
        Field(
            description='Details of the user who created or last modified the search answer. Read-only.'
        ),
    ] = None
    last_modified_date_time: Annotated[
        Optional[datetime],
        Field(
            description='Date and time when the search answer was created or last edited. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    web_url: Annotated[
        Optional[str],
        Field(
            description='The URL link for the search answer. When users select this search answer from the search results, they are directed to the specified URL.'
        ),
    ] = None
    field_odata_type: str


class AnswerVariantCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[AnswerVariant]] = None


class Acronym(SearchAnswer):
    stands_for: Annotated[
        Optional[str], Field(description='What the acronym stands for.')
    ] = None
    state: Optional[AnswerState] = None
    field_odata_type: str


class Bookmark(SearchAnswer):
    availability_end_date_time: Annotated[
        Optional[datetime],
        Field(
            description='Date and time when the bookmark stops appearing as a search result. Set as null for always available. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    availability_start_date_time: Annotated[
        Optional[datetime],
        Field(
            description='Date and time when the bookmark starts to appear as a search result. Set as null for always available. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    categories: Annotated[
        Optional[List[str]],
        Field(
            description='Categories commonly used to describe this bookmark. For example, IT and HR.'
        ),
    ] = None
    group_ids: Annotated[
        Optional[List[str]],
        Field(
            description='The list of security groups that are able to view this bookmark.'
        ),
    ] = None
    is_suggested: Annotated[
        Optional[bool],
        Field(
            description='True if this bookmark was suggested to the admin, by a user, or was mined and suggested by Microsoft. Read-only.'
        ),
    ] = None
    keywords: Annotated[
        Optional[Union[AnswerKeyword, Dict[str, Any]]],
        Field(
            description='Keywords that trigger this bookmark to appear in search results.'
        ),
    ] = None
    language_tags: Annotated[
        Optional[List[str]],
        Field(
            description='A list of geographically specific language names in which this bookmark can be viewed. Each language tag value follows the pattern {language}-{region}. For example, en-us is English as used in the United States. For the list of possible values, see Supported language tags.'
        ),
    ] = None
    platforms: Annotated[
        Optional[List[DevicePlatformType]],
        Field(
            description='List of devices and operating systems that are able to view this bookmark. Possible values are: android, androidForWork, ios, macOS, windowsPhone81, windowsPhone81AndLater, windows10AndLater, androidWorkProfile, unknown, androidASOP, androidMobileApplicationManagement, iOSMobileApplicationManagement, unknownFutureValue.'
        ),
    ] = None
    power_app_ids: Annotated[
        Optional[List[str]],
        Field(
            description='List of Power Apps associated with this bookmark. If users add existing Power Apps to a bookmark, they can complete tasks directly on the search results page, such as entering vacation time or reporting expenses.'
        ),
    ] = None
    state: Optional[AnswerState] = None
    targeted_variations: Annotated[
        Optional[List[AnswerVariant]],
        Field(
            description='Variations of a bookmark for different countries or devices. Use when you need to show different content to users based on their device, country/region, or both. The date and group settings apply to all variations.'
        ),
    ] = None
    field_odata_type: str


class Qna(SearchAnswer):
    availability_end_date_time: Annotated[
        Optional[datetime],
        Field(
            description='Date and time when the QnA stops appearing as a search result. Set as null for always available. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    availability_start_date_time: Annotated[
        Optional[datetime],
        Field(
            description='Date and time when the QnA starts to appear as a search result. Set as null for always available. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.',
            pattern='^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$',
        ),
    ] = None
    group_ids: Annotated[
        Optional[List[str]],
        Field(
            description='The list of security groups that are able to view this QnA.'
        ),
    ] = None
    is_suggested: Annotated[
        Optional[bool],
        Field(
            description='True if a user or Microsoft suggested this QnA to the admin. Read-only.'
        ),
    ] = None
    keywords: Annotated[
        Optional[Union[AnswerKeyword, Dict[str, Any]]],
        Field(
            description='Keywords that trigger this QnA to appear in search results.'
        ),
    ] = None
    language_tags: Annotated[
        Optional[List[str]],
        Field(
            description='A list of geographically specific language names in which this QnA can be viewed. Each language tag value follows the pattern {language}-{region}. For example, en-us is English as used in the United States. For the list of possible values, see Supported language tags.'
        ),
    ] = None
    platforms: Annotated[
        Optional[List[DevicePlatformType]],
        Field(
            description='List of devices and operating systems that are able to view this QnA. Possible values are: android, androidForWork, ios, macOS, windowsPhone81, windowsPhone81AndLater, windows10AndLater, androidWorkProfile, unknown, androidASOP, androidMobileApplicationManagement, iOSMobileApplicationManagement, unknownFutureValue.'
        ),
    ] = None
    state: Optional[AnswerState] = None
    targeted_variations: Annotated[
        Optional[List[AnswerVariant]],
        Field(
            description='Variations of a QnA for different countries or devices. Use when you need to show different content to users based on their device, country/region, or both. The date and group settings apply to all variations.'
        ),
    ] = None
    field_odata_type: str


class AcronymCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Acronym]] = None


class BookmarkCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Bookmark]] = None


class QnaCollectionResponse(BaseCollectionPaginationCountResponse):
    value: Optional[List[Qna]] = None
